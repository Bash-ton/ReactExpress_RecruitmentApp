{"version":3,"sources":["Model/apiCall.js","Model/model.js","Views/Expertise.js","Model/Redux/Reducers/UserReducer.js","Model/Redux/Actions/testLogInLocalStorage.js","Views/Authentication.js","Views/SignUpAdmin.js","Views/ApplicationElement.js","Views/ApplicationList.js","Views/AdminApplications.js","Views/Header.js","App.js","reportWebVitals.js","Model/Redux/Reducers/index.js","Model/Redux/index.js","index.js"],"names":["ApiCall","axios","create","baseURL","withCredentials","credentials","headers","model","this","myExpertise","observers","name","filter","exp","notifyObserver","t","y","year","obs","concat","removeObserver","forEach","callback","o","Expertise","apiCall","isLoggedIn","useSelector","state","UserReducer","userInfo","role","useEffect","window","location","useState","getAllExpertise","allExpertise","setExpertice","getExpertise","setMyExpertise","addObserver","localStorage","setItem","instance","apiAxios","removeExpertise","n","expertise","addExpertise","done","info","post","startPeriod","start","endPeriod","end","dateOfBirth","status","firstName","fname","lastName","lname","competence","email","removeOption","e","removeSelectedExpertise","ExpertiseView","map","onClick","AddExpertiseForm","console","log","setYear","type","setType","setStart","setEnd","min","placeholder","onChange","event","target","value","k","confirm","initState","action","signIn","user","data","dispatch","getState","Authentication","authStatus","setAuthStatus","changeAuthStatus","setChangeAuthStatus","useDispatch","AuthTextField","props","useField","field","meta","errorText","error","touched","TextField","helperText","AuthSchema","Yup","shape","required","password","of","month","max","day","initialValues","username","onSubmit","setSubmitting","resetForm","then","response","response1","validationSchema","values","isSubmitting","errors","Button","disabled","JSON","stringify","url","SignUpAdmin","adminKey","as","ApplicationElement","item","comp","date","updateStatus","selected","id","ApplicationList","applications","className","AdminApplications","result","setResult","CustomCheckboxes","label","FormControlLabel","control","Checkbox","competences","param","length","get","r","Header","App","Model","exact","path","render","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","AllReducers","combineReducers","persistConfig","key","storage","persistedReducer","persistReducer","ReduxStore","createStore","applyMiddleware","thunk","Persistor","persistStore","ReactDOM","store","loading","persistor","document","getElementById"],"mappings":"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","file":"static/js/main.7d80f495.chunk.js","sourcesContent":["import axios from \"axios\";\r\n  export default class ApiCall{\r\n        constructor(){\r\n\r\n        }\r\n        \r\n        apiAxios() {\r\n          return axios.create({\r\n            baseURL: \"/\",\r\n            withCredentials: true,\r\n            credentials: 'include',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        });\r\n        }\r\n\r\n\r\n      }\r\n      ","export default class model{\r\n    constructor(){\r\n        this.myExpertise = [];\r\n        this.observers = [];\r\n    }\r\n    getExpertise(){\r\n        return this.myExpertise;\r\n    }\r\n    removeExpertise(name){\r\n\t\tthis.myExpertise = [...this.myExpertise.filter((exp) => exp.name !== name)];\r\n        this.notifyObserver();\r\n    }\r\n    addExpertise(t, y){\r\n        var exp = {name: t, year: y};\r\n        this.myExpertise = [...this.myExpertise, exp];\r\n        this.notifyObserver();\r\n    }\r\n    getAllExpertise(){\r\n        const exp = [\"A-skills\", \"B-skills\", \"C-skills\", \"D-skills\", \"E-skills\"];\r\n        return exp;\r\n    }\r\n\r\n    addObserver(obs){\r\n        this.observers = this.observers.concat(obs);\r\n        return () => this.removeObserver(obs);\r\n    }\r\n    \r\n    notifyObserver(){\r\n        this.observers.forEach(function(callback) {\r\n            callback();\r\n        });    \r\n    }\r\n    removeObserver(obs) {\r\n        this.observers = this.observers.filter(o => o !== obs)\r\n    }\r\n\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nfunction Expertise({model, apiCall}) {\r\n    const isLoggedIn = useSelector(state => state.UserReducer.userInfo[0].isLoggedIn);\r\n    const role = useSelector(state => state.UserReducer.userInfo[0].role);\r\n\r\n    useEffect(()=>{\r\n        if( (role !== \"client\") || (isLoggedIn === false) )\r\n            window.location = \"/\"\r\n    }, [isLoggedIn, role])\r\n    useEffect(()=>{\r\n        if( (role !== \"client\") || (isLoggedIn === false) )\r\n            window.location = \"/\"\r\n    }, [])\r\n\r\n    const [allExpertise, setExpertice] = useState(model.getAllExpertise());\r\n    useEffect(() => setExpertice(model.getAllExpertise()), []);\r\n\r\n    const [myExpertise, setMyExpertise] = useState(model.getExpertise());\r\n    useEffect(function () {\r\n        return model.addObserver(function () {\r\n            setMyExpertise(model.getExpertise());\r\n        })\r\n    }, [model]);\r\n\r\n    //Ta bort: Modellen bestämmer om den vill läsa från localstorage eller inte.......\r\n    useEffect(() => localStorage.setItem('formData', myExpertise));\r\n\r\n    //remove selected state when chosen?\r\n    const removeSelectedExpertise = e => {\r\n        const exp = allExpertise.filter(name => name !== e);\r\n        setExpertice(exp);\r\n    }\r\n    const instance = apiCall.apiAxios();\r\n    //TODO add user fname, lname, date of birth and start/end period to API call\r\n    return (\r\n        <div>\r\n            {((role === \"client\") && (isLoggedIn === true)) ?\r\n                <div>\r\n                <ExpertiseView myExpertise={myExpertise} removeExpertise={n => {\r\n                    model.removeExpertise(n);\r\n                    setExpertice([...allExpertise, n])\r\n                }}/>\r\n                <AddExpertiseForm expertise={allExpertise} addExpertise={(t, y) => model.addExpertise(t, y)}//TODO add fields: {fname: info.fname, lname: info.lname, dateOfBirth: info.dateOfBirth}\r\n                                  done={(info) => instance.post('posts',{\r\n                                      startPeriod: info.start,\r\n                                      endPeriod: info.end,\r\n                                      dateOfBirth: info.dateOfBirth,\r\n                                      status: \"unhandled\",\r\n                                      firstName: info.fname,\r\n                                      lastName: info.lname,\r\n                                      competence: myExpertise,\r\n                                      email: info.email,\r\n                                  })}\r\n                                  removeOption={(name) => removeSelectedExpertise(name)}\r\n                /></div>\r\n            :\"\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ExpertiseView = ({myExpertise, removeExpertise}) => (\r\n    <div>\r\n        {myExpertise.map(e => \r\n            <tbody>\r\n                <tr key={e.name + e.year}>\r\n                    <td>{e.name}</td>\r\n                    <td>{e.year}</td>\r\n                </tr>\r\n                <button onClick={() => removeExpertise(e.name)}>remove</button>\r\n            </tbody>\r\n            )}\r\n    </div>\r\n);\r\n\r\n\r\n\r\nconst AddExpertiseForm = ({expertise, addExpertise, done, removeOption}) => {\r\n\r\n    const userInfo = useSelector(state => state.UserReducer.userInfo)\r\n   console.log(userInfo)\r\n    const handleSubmit = () => {\r\n        let ans = window.confirm(\"Are you sure you want to submit your application?\");\r\n        if(ans === true){\r\n           //console.log(userInfo[0].dateOfBirth);\r\n           //debugger;\r\n            done({start: start, end: end, fname: userInfo[0].fname, lname: userInfo[0].lname, status: \"unhandled\", dateOfBirth:userInfo[0].dateOfBirth, email: userInfo[0].email});\r\n        }\r\n    }\r\n\r\n    const [year, setYear] = useState(0);\r\n    const [type, setType] = useState('');\r\n    const [start, setStart] = useState(\"\");\r\n    const [end, setEnd] = useState(\"\");\r\n    return (\r\n        <div>\r\n            <input type=\"number\" min=\"0\" placeholder=\"years of experience\" onChange={(event) => setYear(event.target.value)} />\r\n            <select onChange={(event) => setType(event.target.value)}>\r\n                <option>choose your expertise</option>\r\n                {expertise.map((k) => <option key={k}>{k}</option>)}\r\n            </select>\r\n            <button onClick={() => {addExpertise(type, year); removeOption(type)}}>add skill to application</button>\r\n\r\n            <div>\r\n                <br/>\r\n                <input type=\"text\" min=\"0\" placeholder=\"available start period\" onChange={(event)=>{ setStart(event.target.value) }} />\r\n                <input type=\"text\" min=\"0\" placeholder=\"available end period\" onChange={(event)=>{ setEnd(event.target.value) }}/>\r\n                <button onClick={() => {handleSubmit();}}>confirm and send application</button>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport {Expertise}; \r\n","const initState =\r\n    {\r\n        userInfo: [\r\n            {\r\n                isLoggedIn: false,\r\n                role: null,\r\n                fname: \"\",\r\n                lname: \"\",\r\n                dateOfBirth: \"\",\r\n                email: \"\",\r\n            }\r\n        ]\r\n    }\r\n\r\nconst UserReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case \"LOG_IN_USER\":\r\n            return {\r\n\r\n                userInfo: [\r\n                    {\r\n                        isLoggedIn: true,\r\n                        role: action.role,\r\n                        fname: action.fname,\r\n                        lname: action.lname,\r\n                        dateOfBirth: action.dateOfBirth,\r\n                        email: action.email,\r\n                    }\r\n                ]\r\n\r\n            };\r\n        case \"LOG_OUT_USER\":\r\n            return {\r\n\r\n                userInfo: [\r\n                    {\r\n                        isLoggedIn: false,\r\n                        role: null,\r\n                        fname: \"\",\r\n                        lname: \"\",\r\n                        dateOfBirth: \"\",\r\n                        email: \"\",\r\n                    }\r\n                ]\r\n\r\n            };\r\n        case \"SIGN_UP_USER\"://TODO remove this\r\n            return {\r\n\r\n                userInfo: [\r\n                    {\r\n                        isLoggedIn: true,\r\n                        role: action.role,\r\n                        fname: action.fname,\r\n                        lname: action.lname,\r\n                        dateOfBirth: action.dateOfBirth,\r\n                        email: \"\",\r\n                    }\r\n                ]\r\n\r\n            };\r\n            \r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport default UserReducer;","\r\n\r\nexport const signIn = (user) => {\r\n    console.log(user.data)\r\n    debugger\r\n    return (dispatch, getState) => {\r\n        dispatch({type:\"LOG_IN_USER\", role:user.data.role, fname:user.data.firstName, lname: user.data.lastName, dateOfBirth: user.data.dateOfBirth, email: user.data.email})\r\n    }\r\n}\r\n\r\n\r\nexport const testingSignOut = () => {\r\n\r\n\r\n    return (dispatch, getState) => {\r\n        dispatch({type:\"LOG_OUT_USER\"})\r\n    }\r\n}","import React, {useEffect, useState} from 'react'\r\nimport {Field, Form, Formik, useField} from \"formik\";\r\nimport {TextField, Button, Select, MenuItem} from \"@material-ui/core\";\r\nimport * as Yup from \"yup\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport UserReducer from \"../Model/Redux/Reducers/UserReducer\";\r\nimport {signIn, signUP, testing} from \"../Model/Redux/Actions/testLogInLocalStorage\";\r\nimport ApiCall from \"../Model/apiCall\";\r\nimport axios from \"axios\";\r\nconst Authentication = ({apiCall}) => {\r\n\r\n    //hooks\r\n    const [authStatus, setAuthStatus] = useState(\"Sign up\");\r\n    const [changeAuthStatus, setChangeAuthStatus] = useState(\"Login\");\r\n    const isLoggedIn = useSelector(state => state.UserReducer.userInfo[0].isLoggedIn);\r\n    const role = useSelector(state => state.UserReducer.userInfo[0].role);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n   useEffect(()=>{\r\n        if(role === \"client\"){\r\n            window.location = \"/user/application\";\r\n\r\n        }else if(role === \"admin\"){\r\n            window.location = \"/admin/applications\";\r\n\r\n        }\r\n    }, [isLoggedIn])\r\n\r\n\r\n// let param = auth/login\r\n\r\n    //custom Formik components\r\n    const AuthTextField = ({\r\n                               placeholder,\r\n                               ...props\r\n                           }) => {\r\n        const [field, meta] = useField(props);\r\n        const errorText = meta.error && meta.touched ? meta.error : \"\";\r\n        return (\r\n            <TextField\r\n                placeholder={placeholder}\r\n                {...field}\r\n                helperText={errorText}\r\n                error={!!errorText}//casting string to boolean\r\n                type={props.type}\r\n            />\r\n        )\r\n    }\r\n    //yup schema\r\n    const AuthSchema = Yup.object().shape({\r\n        email: Yup.string()\r\n            .min(4, 'Too Short!')\r\n            .required('Required')\r\n            .email('Invalid email'),\r\n        password: Yup.string()\r\n            .min(4, 'Too Short!')\r\n            .required('Required'),\r\n        firstName: (authStatus === \"Login\")\r\n            ? Yup.string()\r\n            : Yup.string()\r\n                .required('Required'),\r\n        lastName: (authStatus === \"Login\")\r\n            ? Yup.string()\r\n            : Yup.string()\r\n                .required('Required'),\r\n        dateOfBirth: Yup.array()\r\n            .of(\r\n                Yup.object().shape({\r\n                    year: (authStatus === \"Login\")\r\n                        ? Yup.number()\r\n                        : Yup.number().required('Required'),\r\n                    month: (authStatus === \"Login\")\r\n                        ? Yup.number()\r\n                        : (Yup.number()\r\n                            .min(1, \"must be between 1 and 12\")\r\n                            .max(12, \"must be between 1 and 31\")\r\n                            .required('Required')),\r\n                    day: (authStatus === \"Login\")\r\n                        ? Yup.number()\r\n                        : Yup.number()\r\n                            .min(1, \"must be between 1 and 31\")\r\n                            .max(31, \"must be between 1 and 31\")\r\n                            .required('Required'),\r\n                })\r\n            )\r\n    })\r\n\r\n    //event handlers\r\n    const handleAuthStatusChange = () => {\r\n        if (authStatus === \"Login\") {\r\n            setAuthStatus(\"Sign up\")\r\n            setChangeAuthStatus(\"Login\")\r\n        } else {\r\n            setAuthStatus(\"Login\")\r\n            setChangeAuthStatus(\"Sign up\")\r\n        }\r\n    }\r\n\r\n    const changeView = (url) => {\r\n        window.location = url\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!isLoggedIn\r\n                ?<div>\r\n                <Formik\r\n                    initialValues={{\r\n                        username: \"\",\r\n                        email: \"\",\r\n                        password: \"\",\r\n                        firstName: \"\",\r\n                        lastName: \"\",\r\n                        dateOfBirth: [{year: \"\", month: \"\", day: \"\"}]\r\n                    }}\r\n                    onSubmit={(data, {setSubmitting, resetForm}) => {\r\n                        setSubmitting(true);\r\n                        resetForm();\r\n                        //TODO uncomment this and use real actions with dispatch (call api from within actions)\r\n                       /*  switch(authStatus){\r\n                            case \"Login\":\r\n                            dispatch()//to action that handles login\r\n                            break;\r\n                            case \"Sign up\":\r\n                            dispatch()//to action that handles signup\r\n                            break;\r\n                            default:\r\n                            break;\r\n                        } */\r\n                         \r\n                        let obj = {email: \"test@kth.se\", password:\"test\"};\r\n                        let param = \"auth/login\";\r\n\r\n                        if(authStatus ===  \"Sign up\"){\r\n                            const instance = apiCall.apiAxios();\r\n\r\n                            instance.post('auth/register', {data})\r\n                                .then((response) => {\r\n                                    //dispatch(signUP(response))\r\n                                    const instance = apiCall.apiAxios();\r\n                                    instance.post('auth/login', {email: data.email, password: data.password})\r\n                                        .then((response1) => {\r\n                                            // console.log(response.headers[\"set-cookie\"]);\r\n                                            console.log(response1)\r\n                                            // console.log(document.cookie)\r\n                                            dispatch(signIn(response1))\r\n                                          //  dispatch(signUP(data)) //TODO change to signIn\r\n                                           // instance.get(\"posts\").then(r =>console.log(r) )\r\n                                        }, (error) => {\r\n                                            console.log(error);\r\n                                        });\r\n                                   // instance.get(\"posts\").then(r =>console.log(r) )\r\n                                }, (error) => {\r\n                                    console.log(error);\r\n                                });\r\n                        }\r\n                      else{\r\n                            const instance = apiCall.apiAxios();\r\n                            console.log(data);\r\n\r\n                            instance.post('auth/login', {email: data.email, password: data.password})\r\n                                .then((response1) => {\r\n                                    // console.log(response.headers[\"set-cookie\"]);\r\n                                    console.log(response1)\r\n                                    // console.log(document.cookie)\r\n                                    dispatch(signIn(response1))\r\n                                   // dispatch(testing())//TODO change to signIn\r\n                                    // instance.get(\"posts\").then(r =>console.log(r) )\r\n                                }, (error) => {\r\n                                    console.log(error);\r\n                                });\r\n\r\n\r\n                            //instance.get(\"posts\").then(r => console.log(r))\r\n\r\n                        } \r\n                    \r\n                        //;//testing remove this when the TODO above is done\r\n                        console.log(\"submit:\", {data: data});\r\n                        setSubmitting(false);\r\n                    }}\r\n\r\n\r\n                    \r\n                    validationSchema={AuthSchema}\r\n\r\n                >\r\n                    {({values, isSubmitting, resetForm, errors}) => (\r\n                        <Form>\r\n                            <div>\r\n                                <AuthTextField\r\n                                    placeholder=\"Email\"\r\n                                    name=\"email\"\r\n                                    type=\"input\"\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <AuthTextField\r\n                                    placeholder=\"Password\"\r\n                                    name=\"password\"\r\n                                    type=\"password\"\r\n                                />\r\n                            </div>\r\n                            {(authStatus === \"Sign up\") ? <div>\r\n                                <AuthTextField\r\n                                    placeholder=\"Username\"\r\n                                    name=\"username\"\r\n                                    type=\"input\"\r\n                                />\r\n                            </div> : \"\"}\r\n                            {(authStatus === \"Sign up\") ? <div>\r\n                                <AuthTextField\r\n                                    placeholder=\"First Name\"\r\n                                    name=\"firstName\"\r\n                                    type=\"input\"\r\n                                />\r\n                            </div> : \"\"}\r\n                            {(authStatus === \"Sign up\") ? <div>\r\n                                <AuthTextField\r\n                                    placeholder=\"Last Name\"\r\n                                    name=\"lastName\"\r\n                                    type=\"input\"\r\n                                />\r\n                            </div> : \"\"}\r\n                            {(authStatus === \"Sign up\") ? <div>\r\n                                <AuthTextField\r\n                                    placeholder=\"Year\"\r\n                                    name=\"dateOfBirth[0].year\"\r\n                                    type=\"number\"\r\n                                />\r\n                                <AuthTextField\r\n                                    placeholder=\"Month\"\r\n                                    name=\"dateOfBirth[0].month\"\r\n                                    type=\"number\"\r\n                                />\r\n                                <AuthTextField\r\n                                    placeholder=\"Day\"\r\n                                    name=\"dateOfBirth[0].day\"\r\n                                    type=\"number\"\r\n                                />\r\n                            </div> : \"\"}\r\n                            <div>\r\n                                <Button disabled={isSubmitting} type=\"submit\">{authStatus}</Button>\r\n                            </div>\r\n\r\n                            <pre>{JSON.stringify(values, null, 2)}</pre>\r\n                            <pre>{JSON.stringify(errors, null, 2)}</pre>\r\n\r\n\r\n                            <div onClick={() => {\r\n                                handleAuthStatusChange();\r\n                                resetForm()\r\n                            }}>{changeAuthStatus}</div>\r\n                        </Form>\r\n                    )}\r\n\r\n\r\n                </Formik>\r\n                <div onClick={() => {\r\n                    changeView(\"/admin/signup\")\r\n                }}>sign up new admin\r\n                </div>\r\n\r\n            </div>\r\n            :\"\"}\r\n        </div>\r\n    )\r\n}\r\nexport default Authentication;","import React from 'react'\r\nimport {Field, Form, Formik} from \"formik\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\n\r\n\r\nconst SignUpAdmin = () =>{\r\n\r\n\r\n\r\n    //event handlers\r\n    const changeView = (url) => {\r\n        window.location =  url\r\n    }\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{ email: \"\", password: \"\", adminKey: \"\"}}\r\n                onSubmit={( data, { setSubmitting , resetForm}) =>{\r\n                    setSubmitting(true);\r\n                    resetForm();\r\n                    //make async calls here to auth\r\n                    console.log(\"submit:\", data);\r\n                    setSubmitting(false);\r\n                } }\r\n            >\r\n                {({  values, isSubmitting  })  => (\r\n                    <Form >\r\n                        <Field\r\n                            placeholder=\"Email\"\r\n                            name=\"email\"\r\n                            type=\"input\"\r\n                            as={TextField}\r\n                        />\r\n                        <div>\r\n                            <Field\r\n                                placeholder=\"Password\"\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                as={TextField}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <Field\r\n                                placeholder=\"Key\"\r\n                                name=\"adminKey\"\r\n                                type=\"password\"\r\n                                as={TextField}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <Button disabled={isSubmitting} type=\"submit\">Sign up</Button>\r\n                        </div>\r\n                        <pre>{JSON.stringify(values, null, 2)}</pre>\r\n\r\n                    </Form>\r\n                )}\r\n\r\n\r\n            </Formik>\r\n            <div onClick={()=>{changeView(\"/\")}}>log in</div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUpAdmin;","import React from \"react\";\r\n//TODO GET( lname and fname and status ) aswell\r\nconst ApplicationElement = ({item}) => {\r\n\r\n    //TODO CHANGE {testing} to directly look inside item from api\r\n    const testing = \"unhandled\";\r\n\r\n    //call api and update status\r\n    const updateStatus = (event) => {\r\n        console.log(event.target.value)\r\n        console.log(event)\r\n    }\r\n\r\n    return (\r\n        <tr key={item.id}>\r\n            <td>{item.firstName}</td>\r\n            <td>{item.lastName}</td>\r\n            <td>{item.competence?.map(comp =>{\r\n                return(\r\n                    <div>{comp.name} {comp.year} year(s)</div>\r\n                )\r\n            })}</td>\r\n            <td>{item.startPeriod}</td>\r\n            <td>{item.endPeriod}</td>\r\n            <td>{item.dateOfBirth?.map(comp =>{\r\n                return(\r\n                    <div>{comp.year}-{comp.month}-{comp.day} </div>\r\n                )\r\n            })}</td>\r\n            <td>{item.date}</td>\r\n            <td><select name=\"status\" onChange={(event)=>{ updateStatus(event) }}>\r\n\r\n                {(testing === \"unhandled\")?\r\n                    <option selected=\"selected\" value=\"unhandled\">unhandled</option>\r\n                :<option value=\"unhandled\">unhandled</option>}\r\n\r\n                {(testing === \"rejected\")?\r\n                    <option selected=\"selected\" value=\"rejected\">rejected</option>\r\n                    :<option value=\"rejected\">rejected</option>}\r\n\r\n                {(testing === \"accepted\")?\r\n                    <option selected=\"selected\" value=\"accepted\">accepted</option>\r\n                    :<option value=\"accepted\">accepted</option>}\r\n            </select></td>\r\n        </tr>\r\n    )\r\n\r\n}\r\n\r\nexport default ApplicationElement;","import React from \"react\"\r\nimport ApplicationElement from \"./ApplicationElement\";\r\nimport \"./css/ApplicationList.css\"\r\n\r\nconst ApplicationList = ({applications}) => {\r\n\r\n    console.log(applications)\r\n    return(\r\n        <table className=\"content-table\">\r\n            <thead>\r\n            <tr>\r\n                <th>fname</th>\r\n                <th>lname</th>\r\n                <th>skills</th>\r\n                <th>startP</th>\r\n                <th>endP</th>\r\n                <th>date of birth</th>\r\n                <th>application made at</th>\r\n                <th>application status</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {applications?.map(item =>{\r\n                return(\r\n                    <ApplicationElement item={item}/>\r\n                )\r\n            })}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default ApplicationList;","import React, {useEffect, useState} from \"react\"\r\nimport {Field, Form, Formik, useField} from \"formik\";\r\nimport {Button, Checkbox, FormControlLabel} from \"@material-ui/core\";\r\nimport ApplicationList from \"./ApplicationList\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\n\r\nconst AdminApplications = ({apiCall}) => {\r\n    const [result, setResult] = useState([])\r\n\r\n    const isLoggedIn = useSelector(state => state.UserReducer.userInfo[0].isLoggedIn);\r\n    const role = useSelector(state => state.UserReducer.userInfo[0].role);\r\n\r\n\r\n    useEffect(() => {\r\n        if ((role !== \"admin\") || (isLoggedIn === false))\r\n            window.location = \"/\"\r\n    }, [isLoggedIn, role])\r\n\r\n\r\n    const CustomCheckboxes = ({label, ...props}) => {\r\n        const [field] = useField(props);\r\n        return <FormControlLabel {...field} control={<Checkbox/>} label={label}/>;\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {(role === \"admin\") && (isLoggedIn === true)\r\n                ? <div>\r\n                    <Formik\r\n                        initialValues={{\r\n\r\n                            competences: []\r\n\r\n                        }}\r\n                        onSubmit={(data, {setSubmitting}) => {\r\n                            setSubmitting(true);\r\n                            let param = \"posts\"\r\n                            if (data.competences.length === 2) {\r\n                                param = \"posts/competence/or=\" + data.competences[0] + \"&=\" + data.competences[1];\r\n                            } else if (data.competences.length === 1) {\r\n                                param = \"posts/competence=\" + data.competences[0];\r\n                            }\r\n\r\n                            const instance = apiCall.apiAxios();\r\n                            instance.get(param).then(r =>( setSubmitting(false), setResult(r.data),setResult(r.data)))\r\n                        }}\r\n                    >\r\n                        {({values, isSubmitting, errors}) => (\r\n                            <Form>\r\n                                <CustomCheckboxes name=\"competences\" value=\"A-skills\" type=\"checkbox\" label=\"A-skills\"/>\r\n                                <CustomCheckboxes name=\"competences\" value=\"B-skills\" type=\"checkbox\" label=\"B-skills\"/>\r\n                                <CustomCheckboxes name=\"competences\" value=\"C-skills\" type=\"checkbox\" label=\"C-skills\"/>\r\n                                <CustomCheckboxes name=\"competences\" value=\"D-skills\" type=\"checkbox\" label=\"D-skills\"/>\r\n                                <CustomCheckboxes name=\"competences\" value=\"E-skills\" type=\"checkbox\" label=\"E-skills\"/>\r\n                                <Button disabled={isSubmitting} type=\"submit\">Get Applications</Button>\r\n                                <div>\r\n                                    <pre>{JSON.stringify(values, null, 2)}</pre>\r\n                                    <pre>{JSON.stringify(errors, null, 2)}</pre>\r\n                                </div>\r\n                            </Form>\r\n\r\n                        )}\r\n                    </Formik>\r\n                    {(result.length > 0) ? <ApplicationList applications={result}/> : \"\"}\r\n                </div>\r\n                : \"\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminApplications;","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {testingSignOut} from \"../Model/Redux/Actions/testLogInLocalStorage\";\r\nimport \"./css/Header.css\";\r\n\r\nconst Header = () => {\r\n\r\n    const isLoggedIn = useSelector(state => state.UserReducer.userInfo[0].isLoggedIn);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div className=\"Header-wrapper\">\r\n            <div className=\"logo\">Recruitment Logo Here</div>\r\n            {isLoggedIn\r\n                ? <button className=\"authButton\" onClick={ ()=> dispatch(testingSignOut())  }>Log out</button>\r\n                : \"\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import {Component} from \"react\";\r\nimport './App.css';\r\nimport { Route } from \"react-router-dom\"\r\n\r\n//models\r\nimport ApiCall from './Model/apiCall';\r\nimport Model from './Model/model'\r\n\r\n//presenter\r\nimport {Expertise} from './Views/Expertise'\r\n//views\r\nimport Authentication from \"./Views/Authentication\";\r\nimport SignUpAdmin from \"./Views/SignUpAdmin\";\r\nimport AdminApplications from \"./Views/AdminApplications\";\r\nimport Header from \"./Views/Header\";\r\n\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            apiCall: new ApiCall(),\r\n            model: new Model()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"applicationApp\">\r\n                <header className=\"recruitmentApp\">\r\n                    <Header/>\r\n                </header>\r\n                <Route\r\n                    exact path=\"/\"\r\n                    render={() => <Authentication apiCall={this.state.apiCall}/>}\r\n                />\r\n                <Route\r\n                    exact path=\"/admin/signup\"\r\n                    render={() => <SignUpAdmin/>}\r\n                />\r\n                <Route\r\n                    exact path=\"/user/application\"\r\n                    render={() => <Expertise model={this.state.model} apiCall={this.state.apiCall}/>}\r\n                />\r\n                <Route\r\n                    exact path=\"/admin/applications\"\r\n                    render={() => <AdminApplications apiCall={this.state.apiCall}/>}\r\n                />\r\n\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers } from \"redux\";\r\nimport UserReducer from \"./UserReducer\";\r\nexport const AllReducers = combineReducers({\r\n    UserReducer\r\n})","import {applyMiddleware, compose, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\r\nimport { AllReducers } from \"./Reducers\"\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n}\r\nconst persistedReducer = persistReducer(persistConfig, AllReducers)\r\n\r\n\r\nexport const ReduxStore = createStore(persistedReducer, applyMiddleware(thunk));\r\nexport const Persistor = persistStore(ReduxStore)\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from \"react-redux\";\r\nimport {ReduxStore, Persistor} from \"./Model/Redux\"\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {PersistGate} from 'redux-persist/integration/react'\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={ReduxStore}>\r\n        <PersistGate loading={null} persistor={Persistor}>\r\n            <BrowserRouter>\r\n                <App/>\r\n            </BrowserRouter>\r\n        </PersistGate>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}